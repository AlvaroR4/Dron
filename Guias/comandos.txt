--Directorio Mavsdk-server
/home/alvaro/.local/lib/python3.10/site-packages/mavsdk/bin/mavsdk_server -p 50051 udp://:14541

--Compilar rover manualmente
PX4_SYS_AUTOSTART=4009 PX4_GZ_MODEL_POSE="1,1" PX4_SIM_PORT=14541 PX4_SIM_MODEL=gz_r1_rover ./build/px4_sitl_default/bin/px4 -i 1

--Compilar dron manualmente
PX4_SYS_AUTOSTART=4001 PX4_GZ_MODEL_POSE="1,1 PX4_SIM_MODEL=gz_x500 ./build/px4_sitl_default/bin/px4 -i 1

--Compilar dron
make px4_sitl gz_x500

--Listado puertos
ps aux
ps aux | grep mavsdk_server

--Listado puertos activos
ss -ulnp
sudo lsof -i :14541
sudo tcpdump -i any port 14540

--Comandos en PX4
mavlink status
logger status

--PATH gz sim
export GZ_SIM_RESOURCE_PATH=~/Dron/PX4-Autopilot/Tools/simulation/gz/models:~/Dron/PX4-Autopilot/Tools/simulation/gz/worlds:$GZ_SIM_RESOURCE_PATH


-----------------DRON CON CÁMARA-----------------

---PARA VISUALIZAR LA CÁMARA CON ROS2 Y RQT
Lanzar dron con cámara;  
make px4_sitl gz_x500_mono_cam


Ejecutar el agente para que se conecte con el cliente del dron; 
MicroXRCEAgent udp4 -p 8888


---Relacionar las carpetas de intalación(ws->puentes ros2; ws_sensor->controladora dron)
source ~/ws/install/setup.sh
source ~/ws_sensor_combined/install/setup.sh


Lanzar el brigde de ros2 con la cámara; 
ros2 run ros_gz_image image_bridge /world/default/model/x500_mono_cam_0/link/camera_link/sensor/imager/image


Abrir rqt y visualizar el topic de la cámara; (Para visualizar el gazebo suscribirse a image display)
rqt

-------------------------------------------------


---Diagrama imagen ROS2

[Gazebo Sim Sensor] ---> [Gazebo Transport Topic] ---> [ros_gz_image_bridge] ---> [ROS 2 Topic (ej: //world/default/...)] ---> [imagen_receiver.py]
       (Virtual)              (Interno Gazebo)             (Traductor)                 (ROS 2)                                    (Script)


---Para añadir todos los source necesarios al bash inicial que se cargar al abrir un nuevo terminal; 
gedit ~/.bashrc
//Introducir al final:
source ~/ws/install/setup.sh
source ~/ws_sensor_combined/install/setup.sh

---PARA LEER UN TOPIC
ros2 topic echo /fmu/out/vehicle_odometry

---Comandos ros2:
ros2 topic list
ros2 pkg list
ros2 topic info <topic>

---Para ver los topics relacionados con la cámara
ros2 topic list | grep image




